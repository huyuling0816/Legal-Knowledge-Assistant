import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _extends from "@babel/runtime/helpers/extends";
var _excluded = ["children", "className"];
import { cloneElement, forwardRef, isValidElement } from 'react';
import { Render, Provider, Container, useStore } from 'react-login-page';
import { Username } from './control/Username';
import { Password } from './control/Password';
import { Submit } from './control/Submit';
import { Reset } from './control/Reset';
import { Footer } from './control/Footer';
import { Logo } from './control/Logo';
import { Title } from './control/Title';
import './index.css';
import { jsxs as _jsxs } from "react/jsx-runtime";
import { jsx as _jsx } from "react/jsx-runtime";
export * from 'react-login-page';
export * from './control/Username';
export * from './control/Password';
export * from './control/Submit';
export * from './control/Reset';
export * from './control/Title';
export * from './control/Logo';
export * from './control/Footer';
var RenderLogin = () => {
  var {
    blocks = {},
    extra = {},
    data
  } = useStore();
  var {
    fields,
    buttons
  } = data || {
    fields: []
  };
  return /*#__PURE__*/_jsx(Render, {
    children: /*#__PURE__*/_jsxs("div", {
      className: "login-page-base-wrapper",
      children: [/*#__PURE__*/_jsxs("header", {
        children: [blocks.logo, " ", blocks.title]
      }), fields.sort((a, b) => a.index - b.index).map((item, idx) => {
        var extraLabel = extra[item.name];
        if (!item.children && !extraLabel) return null;
        if (!item.children && extraLabel) return /*#__PURE__*/_jsx("div", {
          children: extraLabel
        }, idx);
        return /*#__PURE__*/_jsxs("label", {
          children: [item.children, extraLabel]
        }, item.name + idx);
      }), /*#__PURE__*/_jsx("section", {
        children: buttons.sort((a, b) => a.index - b.index).map((item, idx) => {
          var child = item.children;
          if (! /*#__PURE__*/isValidElement(child)) return null;
          return /*#__PURE__*/cloneElement(child, _extends({}, child.props, {
            key: item.name + idx
          }));
        })
      }), blocks.footer]
    })
  });
};
var LoginPage = /*#__PURE__*/forwardRef((props, ref) => {
  var {
      children,
      className
    } = props,
    divProps = _objectWithoutPropertiesLoose(props, _excluded);
  return /*#__PURE__*/_jsxs(Provider, {
    children: [/*#__PURE__*/_jsx(Username, {}), /*#__PURE__*/_jsx(Password, {}), /*#__PURE__*/_jsx(Logo, {}), /*#__PURE__*/_jsx(Title, {}), /*#__PURE__*/_jsx(Submit, {}), /*#__PURE__*/_jsxs(Container, _extends({}, divProps, {
      ref: ref,
      className: "login-page-base " + (className || ''),
      children: [/*#__PURE__*/_jsx(RenderLogin, {}), children]
    }))]
  });
});
var Login = LoginPage;
Login.Username = Username;
Login.Password = Password;
Login.Submit = Submit;
Login.Reset = Reset;
Login.Footer = Footer;
Login.Logo = Logo;
Login.Title = Title;
Login.displayName = 'BaseLoginPage';
export default Login;